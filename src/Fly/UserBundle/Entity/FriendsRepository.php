<?php

namespace Fly\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FriendsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FriendsRepository extends EntityRepository
{

    public function getFriendsList($user,$query = false)
    {
        $qb = $this->createQueryBuilder('f')
            ->where('f.friend_one = :user')
            ->orWhere('f.friend_two = :user')
            ->andWhere('f.status !=2')
            ->andWhere('f.status !=3')
            ->setParameter('user',$user)
            ;


        return ($query)?$qb->getQuery()->getResult():$qb;

    }


    public function getOnlyFriendsList($user,$query = false)
    {
        $qb = $this->createQueryBuilder('f')
            ->where('f.friend_one = :user')
            ->orWhere('f.friend_two = :user')
            ->andWhere('f.status = 1')
            ->setParameter('user',$user)
        ;


        return (!$query)?$qb->getQuery()->getResult():$qb;

    }

    public function getFriendObject($friendOne, $friendTwo)
    {
        $qb = $this->createQueryBuilder('f')
            ->where('f.friend_one = :friendOne AND f.friend_two = :friendTwo')
            ->orWhere('f.friend_one = :friendTwo AND f.friend_two = :friendOne')
//            ->andWhere('f.status = 1')
            ->setParameters(['friendOne'=>$friendOne, 'friendTwo'=>$friendTwo]);
        ;
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function checkFriends($friendOne, $friendTwo)
    {

        $qb = $this->createQueryBuilder('f')
            ->where('f.friend_one = :friendOne AND f.friend_two = :friendTwo')
            ->orWhere('f.friend_one = :friendTwo AND f.friend_two = :friendOne')
            ->andWhere('f.status = 1')
            ->setParameters(['friendOne'=>$friendOne, 'friendTwo'=>$friendTwo]);
            ;
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function checkUnfriends($friendOne, $friendTwo)
    {

        $qb = $this->createQueryBuilder('f')
            ->where('f.friend_one = :friendOne AND f.friend_two = :friendTwo')
            ->orWhere('f.friend_one = :friendTwo AND f.friend_two = :friendOne')
            ->andWhere('f.status = 3')
            ->setParameters(['friendOne'=>$friendOne, 'friendTwo'=>$friendTwo]);
        ;
        return $qb->getQuery()->getOneOrNullResult();
    }


}
